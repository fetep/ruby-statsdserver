# Whether or not to fork and run in the background.
daemonize = false

# Comma separated list of inputs. Current choices: "udp", "zeromq".
# Inputs are configured in a separate [input:$input] config section.
inputs = udp, zeromq

# Comma separated list of outputs. Current choices: "stdout", "tcp".
# Outputs are configured in a separate [output:$input] config section.
# NOTE: daemonize==true is incompatible with the stdout output.
outputs = stdout, tcp, amqp

# How often statsd does counter/timer/gauge aggregation and flushes updates
# to any configured outputs.
flush_interval = 5

# Whether or not to "preserve" counters by sending zeros for a
# $flush_interval where we haven't seen any increment updates.
# This is on by default to maintain compatible behavior with Etsy's statsd.
preserve_counters = true

# The prefix for all statsd-generated graphite metric names.  Note that
# timers will have a prefix of "$prefix.timers".
# You do not need to include a trailing '.' here, it will be auto added.
prefix = stats

# The suffix for all statsd-generated graphite metric names.  This can be
# useful if you want to append the colo/machine name here, then every
# program sending data to statsd does not have to agree on the local part
# of the metric name.
# You do not need to include a leading '.' here, it will be auto added.
suffix =

# Whether or not to "inject" count/lower/mean/upper/upper_90 timer names
# into the metric name before the $cluster.$hostname sections.
# Default (false) is to append to the end.
# Example:
# Setting to false: timers.response_time.by_url.get.index_html.webservers.host123.mean:12|ms
#                   timers.response_time.by_url.get.index_html.webservers.host123.upper:20|ms
# Setting to true:  timers.response_time.by_url.get.index_html.mean.webservers.host123:12|ms
#                   timers.response_time.by_url.get.index_html.upper.webservers.host123:20|ms
inject_timer_names = false

# Configuration for UDP input, if enabled in 'inputs' above.
[input:udp]
bind = 127.0.0.1
port = 8125

# Configuration for ZeroMQ input.
# This is the bind string for a ZeroMQ PULL socket.
# For possible options, see http://api.zeromq.org/2-2:zmq-bind
# Most common: tcp://host:port or ipc:///path/to/file
[input:zeromq]
bind = tcp://127.0.0.1:8125

# Configuration for the TCP output.  This should point at graphite's
# carbon daemon, or something that understands newline-delimited
# graphite metric update strings.
[output:tcp]
host = 127.0.0.1
port = 2003

# Configuration for the AMQP output.
# Possible exchange types: direct, fanout, topic
[output:amqp]
host = 127.0.0.1
port = 5672
user = guest
pass = guest
vhost = /
exchange_name = stats
exchange_type = topic
exchange_durable = true
exchange_auto_delete = false
